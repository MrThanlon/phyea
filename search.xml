<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[物电科协]]></title>
    <url>%2F2019%2F08%2F11%2F%E7%89%A9%E7%94%B5%E7%A7%91%E5%8D%8F%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[物电科协是什么？立足物理学院，于自由的学术交流氛围，培养拥有实践能力，工程思维，合作意识，学术表达能力以及科创潜力的成电学生。 物电科协主要在做什么？大部分时候做的都是电子设计相关的，参照电子设计大赛可以分成 电源 通常是升压降压等等，一个好的电源应该有很好的转化率。 测量 通常是借助高精度ADC来完成一些实际的测量。 控制 小车、四轴无人机、机械控制系统等等，步进电机和舵机很常见。 通信 射频、信号放大。 具体来说就是 画板子 首先设计原理图，把电路中需要连接的部分画出来 然后进行layout(抱歉实在不知道怎么翻译这个)，绘制实际的电路板并连线(route，也可以叫路由) 焊板子 板子画好之后，交给电路板厂进行生产。然后会收到一块没有元件只有电路的空板子，需要把元件焊接上去才能使用。当然现在一些电路板厂也能够进行SMT(表面贴装技术)加工，这样生产出来的电路板会包含贴片元件。 写代码 因为需要用程序来让MCU(Microcontroller Unit，微控制器)工作，所以写代码也是基本技能。通常使用C或者C++来编写程序，写好之后用编译器编译然后再烧录/下载/上传(一般来说这三个词在这里其实是一个意思)到MCU的存储器上，就让MCU执行你编写的程序了。 MCU程序一般是操作寄存器来实现IO(Input/Output，输入输出，也就是数字信号中的高低电平)控制，这种方式开发起来十分低效，所以我们通常使用HAL(Hardware Abstraction Layer，硬件抽象层)对寄存器进行抽象，使用函数来完成IO控制。其实当年火爆的Arduino就是一个HAL库，它极大地降低了单片机入门的门槛，如果你对寄存器感到恐惧，不妨试试Arduino。 对于刚入门的新手，笔者建议使用Micropython，这是一个为嵌入式设备设计的Python运行环境，它目前支持大部分STM32系列单片机和ESP8266，Python是一种“胶水语言”，它可以非常融洽地衔接C和C++。 打游戏（有一台xbox） 有没有新手教程？很遗憾地说，没有。 但是在这里可以提供笔者自身的学习过程作为参考： 8051单片机 电路 Arduino PHP（这个其实不相关） 树莓派 Python（Python2） GNU/Linux Shell Python（Python3） JavaScript（这个其实不相关） 笔者自认为自己的学习路线很乱，也走了很多弯路，并不建议读者按照这个路线。兴趣是最好的老师，笔者希望读者可以遵循自己的兴趣进行学习。顺便，聪明的人应该能看出来这篇文章是用Markdown写的。 如果你对上面的介绍感到一头雾水，没有关系，只要你对电路感兴趣，我们就是好朋友。 如何加入？大概在新生赛结束之后。 QQ群：点这里或者835860541 电报群（墙外）：点这里或者https://t.me/phyea]]></content>
      <tags>
        <tag>介绍</tag>
      </tags>
  </entry>
</search>
